{"version":3,"file":"WebmDemuxer.js","sourceRoot":"","sources":["../../play-audio/webm/WebmDemuxer.ts"],"names":[],"mappings":";;;AAAA,mCAA+C;AAC/C,iDAAwD;AACxD,6CAA0C;AAI1C,MAAa,WAAY,SAAQ,eAAM;IASnC,YAAY,OAAuB;QAC/B,KAAK,CAAC,OAAO,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,uBAAU,EAAE,CAAA;QAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAA;QACtB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAA;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;IACtB,CAAC;IAED,IAAY,WAAW;QACnB,IAAI,CAAC,GAAG,CAAC,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAC;YACjB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC5C,MAAM;SACP;QACD,CAAC,EAAE,CAAC;QACJ,OAAO,CAAC,CAAC;IACP,CAAC;IAED,IAAY,UAAU;QAClB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,KAAK,CAAA;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAA;QAC/B,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM;YAAE,OAAO,KAAK,CAAA;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAC/D,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,CAAC,EAAE;YAAE,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAClG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAA;QACvB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;QACxB,OAAO,IAAI,CAAA;IACf,CAAC;IAED,OAAO;QACH,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;QACf,IAAI,CAAC,KAAK,GAAG,SAAS,CAAA;QACtB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;IAC9B,CAAC;IAED,KAAK,KAAI,CAAC;IAEV,MAAM,CAAC,KAAa,EAAE,CAAiB,EAAE,IAAoC;QACzE,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAA;YACnD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;SAC7B;;YACI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QACvB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;QAE1B,IAAI,GAAG,YAAY,KAAK;YAAE,IAAI,CAAC,GAAG,CAAC,CAAA;;YAC9B,IAAI,EAAE,CAAA;IACf,CAAC;IAEO,OAAO;QACX,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAA;QAErD,OAAM,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE;YACnC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;YAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAA;YAC3B,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,EAAE;gBAAE,MAAM;YAE/C,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAA;YAChG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAA;YACjB,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAA;YAE5B,IAAG,CAAC,IAAI,EAAE;gBACN,IAAI,CAAC,MAAM,GAAG,SAAS,CAAA;gBACvB,MAAM;aACT;YACD,IAAG,CAAC,MAAM,EAAC;gBACP,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAA;gBAChD,SAAS;aACZ;YAED,IAAG,CAAC,IAAI,CAAC,SAAS,EAAC;gBACf,IAAG,MAAM,CAAC,IAAI,KAAK,MAAM;oBAAE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;;oBAC3C,OAAO,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAA;aACtE;YAED,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA;YAC5G,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;YAC7C,IAAG,KAAK,YAAY,KAAK;gBAAE,OAAO,KAAK,CAAA;YAEvC,IAAG,MAAM,CAAC,IAAI,KAAK,uBAAQ,CAAC,MAAM,EAAE;gBAChC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAA;gBAC7B,SAAS;aACZ;YAED,IAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE;gBACpE,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;gBACxB,MAAM;aACT;;gBACI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAA;YAErD,IAAG,MAAM,CAAC,IAAI,KAAK,aAAa,EAAC;gBAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,MAAO,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;gBACjE,IAAG,CAAC,KAAK,IAAI,KAAK,CAAC,SAAS,KAAK,CAAC;oBAAE,OAAO,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAA;gBACzF,IAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,WAAW;oBAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;aACrE;SACJ;QACD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC9C,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACnB,CAAC;IAEO,WAAW,CAAC,MAAe;QAC/B,IAAG,MAAM,CAAC,IAAI,CAAC,2BAAY,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,2BAAY,CAAC,MAAM,CAAC,CAAA;;YACrE,OAAO,KAAK,CAAA;IACrB,CAAC;IAED,QAAQ,CAAC,KAAoB,EAAE,QAAyC;QACpE,IAAI,CAAC,OAAO,EAAE,CAAA;QACd,QAAQ,CAAC,KAAK,CAAC,CAAC;IACpB,CAAC;IAED,MAAM,CAAC,QAAwC;QAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,QAAQ,EAAE,CAAC;IACf,CAAC;CACJ;AA5HD,kCA4HC","sourcesContent":["import { Duplex, DuplexOptions } from \"stream\";\r\nimport { DataType, WebmElements } from \"./WebmConstant\";\r\nimport { WebmHeader } from \"./WebmHeader\";\r\n\r\n\r\n\r\nexport class WebmDemuxer extends Duplex {\r\n    remaining? : Buffer\r\n    chunk? : Buffer\r\n    cursor : number\r\n    header : WebmHeader\r\n    headfound : boolean\r\n    private data_size : number\r\n    private data_length : number\r\n\r\n    constructor(options : DuplexOptions){\r\n        super(options)\r\n        this.cursor = 0\r\n        this.header = new WebmHeader()\r\n        this.headfound = false\r\n        this.data_length = 0\r\n        this.data_size = 0\r\n    }\r\n\r\n    private get vint_length(): number{\r\n        let i = 0;\r\n\t\tfor (; i < 8; i++){\r\n\t\t\tif ((1 << (7 - i)) & this.chunk![this.cursor])\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\ti++;\r\n\t\treturn i;\r\n    }\r\n\r\n    private get vint_value(): boolean {\r\n        if (!this.chunk) return false\r\n        const length = this.vint_length\r\n        if(this.chunk.length < this.cursor + length) return false\r\n        let value = this.chunk[this.cursor] & ((1 << (8 - length)) - 1)\r\n        for (let i = this.cursor + 1; i < this.cursor + length; i++) value = (value << 8) + this.chunk[i];\r\n        this.data_size = length\r\n        this.data_length = value\r\n        return true\r\n    }\r\n\r\n    cleanup(){\r\n        this.cursor = 0\r\n        this.chunk = undefined\r\n        this.remaining = undefined\r\n    }\r\n\r\n    _read() {}\r\n\r\n    _write(chunk: Buffer, _: BufferEncoding, done: (error?: Error | null) => void): void{\r\n        if (this.remaining) {\r\n            this.chunk = Buffer.concat([this.remaining, chunk])\r\n            this.remaining = undefined\r\n        }\r\n        else this.chunk = chunk\r\n        const tag = this.readTag()\r\n        \r\n        if( tag instanceof Error) done(tag)\r\n        else done()\r\n    }\r\n\r\n    private readTag(){\r\n        if (!this.chunk) return new Error(\"Chunk is missing\")\r\n        \r\n        while(this.chunk.length > this.cursor ){\r\n            const oldCursor = this.cursor\r\n            const id = this.vint_length\r\n            if(this.chunk.length < this.cursor + id) break;\r\n\r\n            const ebmlID = this.parseEbmlID(this.chunk.slice(this.cursor, this.cursor + id).toString('hex'))\r\n            this.cursor += id\r\n            const vint = this.vint_value\r\n\r\n            if(!vint) {\r\n                this.cursor = oldCursor\r\n                break;\r\n            }\r\n            if(!ebmlID){\r\n                this.cursor += this.data_size + this.data_length\r\n                continue;\r\n            }\r\n            \r\n            if(!this.headfound){\r\n                if(ebmlID.name === \"ebml\") this.headfound = true\r\n                else return new Error(\"Failed to find EBML ID at start of stream.\")\r\n            }\r\n\r\n            const data = this.chunk.slice(this.cursor + this.data_size, this.cursor + this.data_size + this.data_length)\r\n            const parse = this.header.parse(ebmlID, data)\r\n            if(parse instanceof Error) return parse\r\n\r\n            if(ebmlID.type === DataType.master) {\r\n                this.cursor += this.data_size\r\n                continue;\r\n            }\r\n\r\n            if(this.chunk.length < this.cursor + this.data_size + this.data_length) {\r\n                this.cursor = oldCursor;\r\n                break;\r\n            }\r\n            else this.cursor += this.data_size + this.data_length\r\n\r\n            if(ebmlID.name === 'simpleBlock'){\r\n                const track = this.header.segment.tracks![this.header.audioTrack]\r\n                if(!track || track.trackType !== 2) return new Error(\"No audio Track in this webm file.\")\r\n                if((data[0] & 0xf) === track.trackNumber) this.push(data.slice(4))\r\n            }\r\n        }\r\n        this.remaining = this.chunk.slice(this.cursor)\r\n        this.cursor = 0\r\n    }\r\n\r\n    private parseEbmlID(ebmlID : string){\r\n        if(Object.keys(WebmElements).includes(ebmlID)) return WebmElements[ebmlID]\r\n        else return false\r\n    }\r\n\r\n    _destroy(error : Error | null, callback : (error : Error | null) => void) : void {\r\n        this.cleanup()\r\n        callback(error);\r\n    }\r\n\r\n    _final(callback: (error?: Error | null) => void): void {\r\n        this.cleanup();\r\n        callback();\r\n    }\r\n}"]}