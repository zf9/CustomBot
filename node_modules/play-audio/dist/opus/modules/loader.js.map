{"version":3,"file":"loader.js","sourceRoot":"","sources":["../../../play-audio/opus/modules/loader.ts"],"names":[],"mappings":";;;AACA,2CAAyD;AACzD,6CAA4D;AAI5D,MAAM,OAAO,GAAG;IACZ,WAAW,EAAE,CAAC,OAA2B,EAAE,EAAE,CAAC,IAAI,uBAAW,CAAC,OAAO,CAAC;IACtE,YAAY,EAAE,CAAC,OAA2B,EAAE,EAAE,CAAC,IAAI,wBAAa,CAAC,OAAO,CAAC;CAC5E,CAAC;AAEF,SAAgB,iBAAiB,CAC7B,OAA2B,EAC3B,UAAuC;IAEvC,IAAI,UAAU,EAAE;QACZ,IAAI,UAAU,KAAK,YAAY,IAAI,UAAU,KAAK,WAAW;YACzD,OAAO,IAAI,KAAK,CAAC,+DAA+D,CAAC,CAAC;QACtF,IAAI;YACA,OAAO,CAAC,UAAU,CAAC,CAAC;SACvB;QAAC,MAAM;YACJ,OAAO,IAAI,KAAK,CAAC,WAAW,UAAU,cAAc,CAAC,CAAC;SACzD;QACD,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC;KACvC;SAAM;QACH,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAChD,IAAI;gBACA,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC;aACxB;YAAC,MAAM;gBACJ,SAAS;aACZ;SACJ;QACD,OAAO,IAAI,KAAK,CAAC,gFAAgF,CAAC,CAAC;KACtG;AACL,CAAC;AAxBD,8CAwBC","sourcesContent":["import { OpusHandlerOptions } from './constant';\nimport { OpusHandler as PlayHandler } from './play-opus';\nimport { OpusHandler as ScriptHandler } from './opusscript';\n\nexport type OpusEncoder = PlayHandler | ScriptHandler;\n\nconst modules = {\n    'play-opus': (options: OpusHandlerOptions) => new PlayHandler(options),\n    'opusscript': (options: OpusHandlerOptions) => new ScriptHandler(options)\n};\n\nexport function createOpusHandler(\n    options: OpusHandlerOptions,\n    preference?: 'play-opus' | 'opusscript'\n): OpusEncoder | Error {\n    if (preference) {\n        if (preference !== 'opusscript' && preference !== 'play-opus')\n            return new Error('Supported modules for play-media :\\n- play-opus\\n- opusscript');\n        try {\n            require(preference);\n        } catch {\n            return new Error(`Module [${preference}] Not Found.`);\n        }\n        return modules[preference](options);\n    } else {\n        for (const [name, exec] of Object.entries(modules)) {\n            try {\n                require(name);\n                return exec(options);\n            } catch {\n                continue;\n            }\n        }\n        return new Error('No modules found. Try to install one of following :\\n- play-opus\\n- opusscript');\n    }\n}\n"]}